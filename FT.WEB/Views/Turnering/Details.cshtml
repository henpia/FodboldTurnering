@model FT.Entities.ViewModels.TurneringDetailsViewModel

<br /><br />

@Html.HiddenFor(model => model.Turnering.AabenForTilmelding)

@* Stamoplysninger for turnering *@
<div id="turneringsDetaljer">
    @Html.DisplayNameFor(model => model.Turnering.Navn)
    @Html.EditorFor(model => model.Turnering.Navn, new { htmlAttributes = new { @disabled = "disabled" } })
    @Html.DisplayNameFor(model => model.Turnering.MaxAntalHold)
    @Html.EditorFor(model => model.Turnering.MaxAntalHold, new { htmlAttributes = new { @disabled = "disabled" } })
    <a id="buttonRetTurnering" href="@Url.Action("Edit", "Turnering", new { Id = Model.Turnering.TurneringId })">
        <i class="far fa-edit"></i>
        Ret
    </a>
</div>


<br /><br />

@* Tilmeldte Hold *@
<p>
    Følgende hold er tilmeldt <strong>@Model.Turnering.Navn</strong> (klik på et hold for at afmelde det igen):
</p>

<div id="tilmeldteHoldListe">
    @foreach (var hold in Model.Turnering.HoldListe)
    {
        <a id="tilmeldtHold" href="@Url.Action("AfmeldHold","Turnering", new { turneringsId = Model.Turnering.TurneringId, holdId = hold.HoldId })">
            <i class="fas fa-minus"></i>
            @hold.Navn
        </a>
    }
</div>


<br /><br />


@* Button: Start Turnering *@
<div class="text-center">
    <a id="buttonStartTurnering" href="@Url.Action("StartTurnering", "Turnering", new { turneringsId = Model.Turnering.TurneringId })">
        START TURNERING
    </a>
</div>

<br /><br />


@* Liste over Hold, der kan tilmeldes *@
<p>Klik på et hold nedenfor for at tilmelde det til <strong>@Model.Turnering.Navn</strong>:</p>
<div id="ikkeTilmeldteHoldListe">
    @foreach (var hold in Model.IkkeTilmeldteHold)
    {
        <a id="ikkeTilmeldtHold" href="@Url.Action("TilmeldHold", "Turnering", new { turneringsId = Model.Turnering.TurneringId, holdId = hold.HoldId })">
            <i class="fas fa-plus"></i>
            @hold.Navn
        </a>
    }
</div>
